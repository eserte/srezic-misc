#!/usr/bin/perl

use strict;
use FindBin;
use Getopt::Long;

sub run_smoker ($$$);

my $do_this_month = 1;
my $do_last_month = 1;
my $do_recent;

my $do_maintperl;
my $do_all;
my $do_special;

my $skip_update;

my $mirror_url = "http://cpan.cpantesters.org/";

GetOptions("maintperl" => \$do_maintperl,
	   "all"       => \$do_all,
	   "special"   => \$do_special,
	   "this!"     => \$do_this_month,
	   "last!"     => \$do_last_month,
	   "recent"    => \$do_recent,
	   "skip-update" => \$skip_update,
	   "mirrorurl=s" => \$mirror_url,
	  )
    or die "usage?";

my $recent_url = $mirror_url;

if (!$do_maintperl && !$do_all && !$do_special) {
    die "Please specify either -maintperl or -all or -special";
}

if ($do_maintperl) {
    system('xterm-conf -f -title "INIT maintperl"');
    # really tests 5.8.8 and 5.8.9, installs everything stable and
    # tests also developer versions

    #(getpwuid($<))[0] eq 'cpansand'
    #	or die "Works only for cpansand!";

    run_smoker '5.18.1', 'devel', '-3d';
    run_smoker '5.18.1', 'stable', '-20d';

    run_smoker '5.19.6', 'devel', '-3d';
    run_smoker '5.19.6', 'stable', '-20d';

    run_smoker '5.8.9t', 'devel', '-3d';
    run_smoker '5.8.9t', 'stable', '-20d';

    run_smoker '5.16.3', 'devel', '-3d';
    run_smoker '5.16.3', 'stable', '-20d';

    run_smoker '5.10.1t', 'devel', '-3d';
    run_smoker '5.10.1t', 'stable', '-20d';

    #run_smoker '5.18.0', 'devel',  '-3d';
    #run_smoker '5.18.0', 'stable', '-20d';
    #
    #run_smoker '5.16.0-RC0', 'devel',  '-3d';
    #run_smoker '5.16.0-RC0', 'stable', '-20d';
    #
    #run_smoker '5.14.0', 'devel',  '-3d';
    #run_smoker '5.12.3', 'devel',  '-3d';
    ##run_smoker '5.12.0', 'devel',  '-3d';
    #run_smoker '5.10.1', 'devel',  '-3d';
    #run_smoker '5.8.9',  'devel',  '-3d';
    #run_smoker '5.14.0', 'stable', '-20d';
    #run_smoker '5.12.3', 'stable', '-20d';
    ##run_smoker '5.12.0', 'stable', '-20d';
    #run_smoker '5.10.1', 'stable', '-20d';
    #run_smoker '5.8.9',  'stable', '-20d';

    system('xterm-conf -f -title "FINISHED maintperl"');
} elsif (0 && $do_maintperl) { # old, somewhat newer
    (getpwuid($<))[0] eq 'cpansand'
	or die "Works only for cpansand!";
    unless ($skip_update) {
	my @cmd = "~eserte/devel/update-allcpanpackages";
	warn "@cmd...\n";
	if (system(@cmd) != 0) {
	    die "update failed";
	}
    }

    my(undef,undef,undef,undef,$m,$y) = localtime;
    $m++;
    $y+=1900;
    my $this_month = sprintf "%04d-%02d-", $y, $m;
    $m--;
    if ($m < 1) {
	$m = 12;
	$y--;
    }
    my $last_month = sprintf "%04d-%02d-", $y, $m;

    my $cmd = <<'EOF';
env PERL_BATCH=yes PERL_CPAN_REPORTER_DIR=$HOME/.cpanreporter/set3 ~eserte/work/srezic-misc/scripts/cpan_smoke_modules -install -nodestroyperl -skiptested -perl /usr/perl5.8.8@34559/bin/perl `sort -r ~cpansand/var/tested-cpan-FreeBSD-5.8.8@34559 | grep -v '^\?' | egrep '(untested|not the latest version)' | egrep '^__DATE__' | sort -r | perl -nale 'print $F[1]'`
EOF
    $cmd =~ s{__DATE__}{($this_month|$last_month)};
    warn "Running '$cmd'...\n";
    system $cmd;
    if ($? != 0) {
	die "Command failed with $?";
    }
} elsif (0 && $do_maintperl) { # old
    unless ($skip_update) {
	my @cmd = "~eserte/devel/update-allcpanpackages";
	warn "@cmd...\n";
	if (system(@cmd) != 0) {
	    die "update failed";
	}
    }
#     if (!$do_this_month && !$do_last_month) {
# 	$do_this_month = 1;
#     }
    my(undef,undef,undef,undef,$m,$y) = localtime;
    $m++;
    $y+=1900;
    my $this_month = sprintf "%04d-%02d-", $y, $m;
    $m--;
    if ($m < 1) {
	$m = 12;
	$y--;
    }
    my $last_month = sprintf "%04d-%02d-", $y, $m;
    my @cmd = ("$FindBin::RealBin/cpan_smoke_modules",
	       "-skiptested", "-install",
	       "-perl", '/usr/perl5.8.8@34559/bin/perl'
	      );
    my @dists;
    {
	open my $fh, "$ENV{HOME}/var/tested-cpan-FreeBSD-5.8.8"
	    or die $!;
	while(<$fh>) {
	    chomp;
	    my @F = split;
	    push @dists, $F[1]
		if (($do_this_month && $F[0] =~ m{^\Q$this_month}) ||
		    ($do_last_month && $F[0] =~ m{^\Q$last_month}));
	}
    }
    if (!@dists) {
	warn "No distributions to test...\n";
	exit;
    }
    push @cmd, @dists;
    warn "@cmd...\n";
    if (system(@cmd) != 0) {
	die "Failed while running command";
    }
} elsif (0) {
    my @dists;
    {
	open my $fh, "-|", "$FindBin::RealBin/cpan_recent_uploads"
	    or die "While running cpan_recent_uploads: $!";
	while(<$fh>) {
	    chomp;
	    push @dists, $_;
	}
    }
    my @cmd = ("$FindBin::RealBin/cpan_smoke_modules", "-skiptested", "-mirrorurl", $mirror_url, @dists);
    warn "@cmd...\n";
    if (system(@cmd) != 0) {
	die "Failure while running command\n";
    }
} elsif ($do_special) {
    warn <<EOF;
*** 5.8.9: Special test: test breakage of the Test::Pod 1.40 change
    (some L<...> errors recognized, see
     http://perlbuzz.com/2009/07/testpod-140-now-checks-for-illegal-l-constructs.html
    )...
EOF
    system q{env PERL_BATCH=yes PERL_CPAN_REPORTER_DIR=$HOME/.cpanreporter/set-perl589@RC2-7.0 ~eserte/work/srezic-misc/scripts/cpan_smoke_modules -nosignalend -perl /usr/perl5.8.9@RC2/bin/perl } . q{ -filelist ~eserte/trash/has_podt2};
} else {
    chomp(my @dists = `$FindBin::RealBin/cpan_recent_uploads2 -v -from -6d -url $recent_url`);
    my @cmd = ("$FindBin::RealBin/cpan_smoke_modules", "-pv", "5.10.0,5.8.8t,5.10.0t,5.6.2,5.8.8",
	       "-skiptested", "--", @dists);
    warn "Running: @cmd\n";
    if (system(@cmd) != 0) {
	die "Failure while running command: @cmd\n";
    }
}

sub run_smoker ($$$) {
    my($perl_version, $stability, $interval) = @_;
    warn "*** $perl_version: Just test uploads last $interval, " . ($stability eq 'stable' ? 'only stable' : 'also devel') . " versions...\n";
    my $perl_exe = '/usr/perl' . $perl_version . '/bin/perl' . $perl_version;
    if (!-x $perl_exe) {
	$perl_exe = '/usr/local/bin/perl' . $perl_version;
	if (!-x $perl_exe) {
	    die "Cannot find a perl $perl_version, tried in /usr/perlXXX and $perl_exe";
	}
    }
    my $install_arg = ($stability eq 'stable' ? '-install' : '');
    #my $install_arg = ''; # never install, currently running as non-cpansand with sudo configured
    my $cmd = q{env PERL_BATCH=yes ~eserte/work/srezic-misc/scripts/cpan_smoke_modules -savereports -nosignalend } . $install_arg . q{ -perl } . $perl_exe . q{ -skiptested -r } . "-mirrorurl $mirror_url" . q{ -- `~eserte/work/srezic-misc/scripts/cpan_recent_uploads2 -onlydists -url } . $recent_url . q{ -from } . $interval . q{ -to -2m -v } . ($stability eq 'stable' ? '-stable' : '') . q{ | grep -v '\.pl$'`};
    warn "$cmd ...\n";
    system $cmd;
    if ($? == 2) {
	die "SIGINT";
    }
}

#!/usr/bin/perl -w
# -*- perl -*-

#
# Author: Slaven Rezic
#
# Copyright (C) 2017,2020,2025 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use File::Temp qw(tempdir);
use Getopt::Long;

GetOptions("pw!" => \my $pw)
    or die "usage?";

my $url;
if ($pw) {
    print STDERR "Enter password or secret: ";
    $url = get_password();
} else {
    $url = shift
	or die "Please specify URL or something else\n";
}

my $tempdir = tempdir("qrcode_XXXXXXXX", TMPDIR =>1, CLEANUP => 1);
my $tempfile = "$tempdir/qrcode.png";
open my $tempfh, ">", $tempfile or die $!;

if (eval { require Imager::QRCode; 1 }) {
    my $qrcode = Imager::QRCode->new(
				     casesensitive => 1,
				    );
    my $img = $qrcode->plot($url);
    $img->write(file => $tempfile)
	or die $img->errstr;
} else {
    require GD;
    require GD::Barcode::QRcode;

    print $tempfh GD::Barcode::QRcode->new($url,
					   { Ecc => 'L', Version=>12, ModuleSize => 4},
					  )->plot->png;
    close $tempfh
	or die $!;
}

if ($^O eq 'darwin') {
    system 'open', '-W', $tempfile;
} elsif (is_in_path('eog')) {
    # prefer eog because of new-instance option
    system 'eog', '--new-instance', $tempfile;
} else {
    # fallback to anything
    system 'xdg-open', $tempfile;
    # hack: as xdg-open may open the application async, sleep for some
    # time so the temporary file vanishes later
    sleep 15;
}

# REPO BEGIN
# REPO NAME is_in_path /home/eserte/src/srezic-repository 
# REPO MD5 4be1e368fea0fa9af4e89256a9878820
sub is_in_path {
    my($prog) = @_;
    require File::Spec;
    if (File::Spec->file_name_is_absolute($prog)) {
	if ($^O eq 'MSWin32') {
	    return $prog       if (-f $prog && -x $prog);
	    return "$prog.bat" if (-f "$prog.bat" && -x "$prog.bat");
	    return "$prog.com" if (-f "$prog.com" && -x "$prog.com");
	    return "$prog.exe" if (-f "$prog.exe" && -x "$prog.exe");
	    return "$prog.cmd" if (-f "$prog.cmd" && -x "$prog.cmd");
	} else {
	    return $prog if -f $prog and -x $prog;
	}
    }
    require Config;
    %Config::Config = %Config::Config if 0; # cease -w
    my $sep = $Config::Config{'path_sep'} || ':';
    foreach (split(/$sep/o, $ENV{PATH})) {
	if ($^O eq 'MSWin32') {
	    # maybe use $ENV{PATHEXT} like maybe_command in ExtUtils/MM_Win32.pm?
	    return "$_\\$prog"     if (-f "$_\\$prog" && -x "$_\\$prog");
	    return "$_\\$prog.bat" if (-f "$_\\$prog.bat" && -x "$_\\$prog.bat");
	    return "$_\\$prog.com" if (-f "$_\\$prog.com" && -x "$_\\$prog.com");
	    return "$_\\$prog.exe" if (-f "$_\\$prog.exe" && -x "$_\\$prog.exe");
	    return "$_\\$prog.cmd" if (-f "$_\\$prog.cmd" && -x "$_\\$prog.cmd");
	} else {
	    return "$_/$prog" if (-x "$_/$prog" && !-d "$_/$prog");
	}
    }
    undef;
}
# REPO END

# REPO BEGIN
# REPO NAME get_password /home/e/eserte/src/srezic-repository 
# REPO MD5 260645ad15d9259849059e682785d7d3
sub get_password {
    my $password;
    if (eval { require Term::ReadKey }) {
	$| = 1;
	Term::ReadKey::ReadMode('noecho');
	chomp($password = <STDIN>);
	Term::ReadKey::ReadMode('restore');
    } else {
	warn <<EOF;
Term::ReadKey is not installed on this system, which means that the
password will be echoed to the terminal.
EOF
        chomp($password = <STDIN>);
    }
    $password;
}
# REPO END

__END__

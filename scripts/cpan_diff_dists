#!/usr/bin/perl -w
# -*- perl -*-

#
# Author: Slaven Rezic
#
# Copyright (C) 2007,2013 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use File::Spec qw();
use File::Temp qw(tempdir);

sub save_pwd (&);

-f "Makefile" or die "No Makefile, please run Makefile.PL";

my $make = 'make';
if ($^O eq 'linux') {
    $make = 'freebsd-make';
}
# XXX other OS than *BSD and linux not handled
if (!is_in_path($make)) {
    die "$make is not available, please install!";
}

chomp(my $distvname = `$make -VDISTVNAME`); # assumes BSD make
die "Cannot get DISTVNAME from Makefile, needs BSD make" if !$distvname;

my $oldtgz = shift;
if (!$oldtgz) {
    # NOTE: Code taken from cpan_check_versions
    warn "No old distribution given, try to find one in the current directory...\n";
    require CPAN::DistnameInfo;
    require CPAN::Version;
    my $max_version;
    my $best_dist;
    for my $f (glob("*")) {
	next if !-f $f;
	my $d = CPAN::DistnameInfo->new($f);
	next if !$d;
	if (!defined $max_version || CPAN::Version->vgt($d->version, $max_version)) {
	    $max_version = $d->version;
	    $best_dist = $d;
	}
    }
    if (!$best_dist) {
	die "Could not find any distribution in the current directory.\n";
    }
    $oldtgz = $best_dist->filename;
}
$oldtgz = File::Spec->rel2abs($oldtgz);

my $tempdir;
save_pwd {
    $tempdir = tempdir(CLEANUP => 1);
    chdir $tempdir or die "Cannot chdir to $tempdir: $!";
    system("tar xfv $oldtgz"); # assume modern tar
    if ($? != 0) {
	die "Error while extracting $oldtgz";
    }
    $tempdir = File::Spec->rel2abs((glob("*"))[0]); # assume only one extracted directory
};

system("make", "distdir") == 0
    or die "Error while running make distdir";

-d $distvname or die "Expected directory <$distvname> after running make distdir";

system("diff", "-upr", $tempdir, $distvname);

# REPO BEGIN
# REPO NAME save_pwd /home/e/eserte/work/srezic-repository 
# REPO MD5 0f7791cf8e3b62744d7d5cfbd9ddcb07

=head2 save_pwd(sub { ... })

=for category File

Save the current directory and assure that outside the block the old
directory will still be valid.

=cut

sub save_pwd (&) {
    my $code = shift;
    require Cwd;
    my $pwd = Cwd::cwd();
    eval {
	$code->();
    };
    my $err = $@;
    chdir $pwd or die "Can't chdir back to $pwd: $!";
    die $err if $err;
}
# REPO END

# REPO BEGIN
# REPO NAME is_in_path /home/slavenr/work2/srezic-repository 
# REPO MD5 e18e6687a056e4a3cbcea4496aaaa1db

sub is_in_path {
    my($prog) = @_;
    if (file_name_is_absolute($prog)) {
	if ($^O eq 'MSWin32') {
	    return $prog       if (-f $prog && -x $prog);
	    return "$prog.bat" if (-f "$prog.bat" && -x "$prog.bat");
	    return "$prog.com" if (-f "$prog.com" && -x "$prog.com");
	    return "$prog.exe" if (-f "$prog.exe" && -x "$prog.exe");
	    return "$prog.cmd" if (-f "$prog.cmd" && -x "$prog.cmd");
	} else {
	    return $prog if -f $prog and -x $prog;
	}
    }
    require Config;
    %Config::Config = %Config::Config if 0; # cease -w
    my $sep = $Config::Config{'path_sep'} || ':';
    foreach (split(/$sep/o, $ENV{PATH})) {
	if ($^O eq 'MSWin32') {
	    # maybe use $ENV{PATHEXT} like maybe_command in ExtUtils/MM_Win32.pm?
	    return "$_\\$prog"     if (-f "$_\\$prog" && -x "$_\\$prog");
	    return "$_\\$prog.bat" if (-f "$_\\$prog.bat" && -x "$_\\$prog.bat");
	    return "$_\\$prog.com" if (-f "$_\\$prog.com" && -x "$_\\$prog.com");
	    return "$_\\$prog.exe" if (-f "$_\\$prog.exe" && -x "$_\\$prog.exe");
	    return "$_\\$prog.cmd" if (-f "$_\\$prog.cmd" && -x "$_\\$prog.cmd");
	} else {
	    return "$_/$prog" if (-x "$_/$prog" && !-d "$_/$prog");
	}
    }
    undef;
}
# REPO END

# REPO BEGIN
# REPO NAME file_name_is_absolute /home/slavenr/work2/srezic-repository 
# REPO MD5 89d0fdf16d11771f0f6e82c7d0ebf3a8

BEGIN {
    if (eval { require File::Spec; defined &File::Spec::file_name_is_absolute }) {
	*file_name_is_absolute = \&File::Spec::file_name_is_absolute;
    } else {
	*file_name_is_absolute = sub {
	    my $file = shift;
	    my $r;
	    if ($^O eq 'MSWin32') {
		$r = ($file =~ m;^([a-z]:(/|\\)|\\\\|//);i);
	    } else {
		$r = ($file =~ m|^/|);
	    }
	    $r;
	};
    }
}
# REPO END

__END__

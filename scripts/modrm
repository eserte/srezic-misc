#!/usr/bin/perl -w

use strict;
use IO::Dir;
use ExtUtils::Packlist;
use ExtUtils::Installed;

sub emptydir($) {
    my ($dir) = @_;
    my $dh = IO::Dir->new($dir) || return(0);
    my @count = $dh->read();
    $dh->close();
    return(@count == 2 ? 1 : 0);
}

sub find_packlist_file {
    my($module) = @_;
    (my $path = $module) =~ s{::}{/}g;
    $path .= "/.packlist";
    for my $incdir (@INC) {
	my $trypath = "$incdir/auto/$path";
	return $trypath if -e $trypath;
    }
    undef;
}

# ExtUtils::Installed + Packlist is slow, see https://rt.perl.org/Public/Bug/Display.html?id=121829
# So hack a reduced EUI object which only contains information for a single module.
sub make_reduced_EUI {
    my($module) = @_;
    my $packlist_file = find_packlist_file($module);
    die "Can't find packlist for $module" if !$packlist_file;
    my $eui = bless {}, 'ExtUtils::Installed';
    $eui->_make_entry($module, $packlist_file); # don't care about versions etc., so don't supply $modfile
    $eui;
}

my @modules = @ARGV;

if (!@modules) {
    # Find all the installed packages
    my $installed = ExtUtils::Installed->new();
    print STDERR ("Finding all installed modules...\n");
    foreach my $module (grep(!/^Perl$/, $installed->modules())) {
	my $version = $installed->version($module) || "???";
	print("$module $version\n");
    }
} else {
    for my $module (@modules) {
	my $installed = make_reduced_EUI($module);
	print STDERR ("Removal list for $module\n");
	# Remove all the files
	foreach my $file (sort($installed->files($module))) {
	    print("rm $file\n");
	}
	my $pf = $installed->packlist($module)->packlist_file();
	print("rm $pf\n");
	foreach my $dir (sort($installed->directory_tree($module))) {
	    if (emptydir($dir)) {
		print("rmdir $dir\n");
	    }
	}
    }
}

__END__

=head1 NAME

modrm - remove a module

=head1 SYNOPSIS

First check:

    modrm Acme::BadExample

Then do it:

    modrm Acme::BadExample | sudo sh -

Or for another perl:

    perl5.X.Y -S modrm Ache::BadExample

=cut

#!/usr/bin/perl -w
# -*- perl -*-

#
# $Id: idletermchecker,v 1.7 2007/10/06 12:40:54 eserte Exp $
# Author: Slaven Rezic
#
# Copyright (C) 2007 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

# Obsolete comments:
#   On FreeBSD:
#     kldload snp
#     sudo watch p2 | idlechecker.pl
#   On Linux:
#     Use snoop? http://sourceforge.net/projects/snoop/

use strict;
use IO::Select;
use Getopt::Long;

my @terminals;
my $timeout = 30; # mx.develooper.com is sloooow!
my $q; # be quiet on stderr
GetOptions("timeout=i" => \$timeout,
	   "q" => \$q,
	  )
    or die "usage!";

if (@ARGV) {
    @terminals = map { "/dev/tty$_" } @ARGV; # assume BSD
    check_terminals(\@terminals);
} else {
    check_stdin();
}

sub check_terminals {
    my($terminals_ref) = @_;
    my @terminals = @$terminals_ref;
    while() {
	my @timeouted;
	for my $terminal (@terminals) {
	    my($mtime) = (stat($terminal))[9];
	    if (!defined $mtime) {
		die "Cannot get mtime for <$terminal>";
	    }
	    if (time-$mtime >= $timeout) {
		push @timeouted, $terminal;
	    }
	}
	if (@timeouted) {
	    my $message = "No output anymore on terminal(s) <@timeouted> for $timeout seconds!";
	    warn_message($message);
	}
	sleep 1;
    }
}

sub check_stdin {
    my $s = IO::Select->new;
    $s->add(\*STDIN);

    while () {
	while () {
	    my @ready = $s->can_read($timeout);
	    if (!@ready) {
		last;
	    }
	    while () {
		my $buf;
		last if sysread(STDIN, $buf, 256, 0) < 256;
	    }
	}
	my $message = "No output anymore on terminal for $timeout seconds!";
	warn_message($message);
    }
}

sub warn_message {
    my $message = shift;
    if (!$q) {
	print STDERR "$message\n";
    }

    system("alarm", "-nicedown");
    system("tkmessage", "-bg", "red", "-fg", "white", "-buttons", "Continue:100,Abort:101", $message);
    my $st = $?/256;
    if ($st != 100) {
	exit 0;
    }
}

__END__

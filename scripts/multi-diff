#!/usr/bin/env perl
#
# Copyright (C) 2014,2018,2024,2025 Slaven Rezic. All rights reserved.
# This package is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.

use strict;
use warnings;
our $VERSION = 0.004;

use File::Temp qw(tempfile);
use Getopt::Long;

sub usage () {
    require File::Basename;
    die "usage: @{[ File::Basename::basename($0) ]} [-r|--reverse] file1 file2 ...\n";
}

my $reverse;
GetOptions("reverse|r" => \$reverse)
    or usage;
my @files = @ARGV;
@files or usage;

@files = reverse @files if $reverse;

my $principal_file = shift @files;
print "="x70, "\n";
print "=== $principal_file is principal file\n";
my %seen_file = ($principal_file => 1);
my $count_diffs = 0;
for my $file (@files) {
    next if $seen_file{$file}++;
    print "="x70, "\n";
    print "=== $file\n";
    my @cmd = ("diff", "-I", '$HeadURL:', "-I", '$Id:', "-u", $principal_file, $file);
    system @cmd;
    if ($? != 0) {
	$count_diffs++;
    }
}

if ($count_diffs != 0) {
    exit 1;
}

__END__

=head1 NAME

multi-diff - make a diff over multiple files

=head1 SYNOPSIS

    multi-diff [-r|--reverse] file ...

=head1 DESCRIPTION

Run a series of L<diff(1)> calls with the first file in the argument
list against all other files.

Use the C<--reverse> option to reverse the list of files.

=head1 AUTHOR

Slaven Rezic <srezic@cpan.org>

=cut
